{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst dummyUser = {\n  nickname: '보르바',\n  Post: [],\n  Followers: [],\n  Followings: [],\n  signUpData: {},\n  id: 1\n};\nexport const initialState = {\n  isLoggedIn: false,\n  // 로그인 여부\n  isLoggingIn: false,\n  // 로그인 시도중\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  logInErrorReason: '',\n  // 로그인 실패사유\n  isSignedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: '',\n  // 회원가입 실패 사유\n  me: null,\n  // 내정보\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null // 남의 정보\n\n};\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n});\nexport const logoutRequestAction = {\n  type: LOG_OUT_REQUEST\n};\nexport const loginSeccessAction = {};\nexport const singUpRequestAction = data => ({\n  type: SIGN_UP_REQUEST,\n  data\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: true,\n          logInErrorReason: ''\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          isLoggedIn: true,\n          me: dummyUser,\n          isLoading: false\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          isLoggedIn: false,\n          logInErrorReason: action.error,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: true\n        });\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: false,\n          me: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data,\n          isSigningUp: true,\n          isSignedUp: false,\n          signUpErroReason: ''\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data,\n          isSigningUp: false,\n          isSignedUp: true\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data,\n          isSigningUp: false,\n          signUpErroReason: action.error\n        });\n      }\n\n    case LOAD_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: action.data\n        });\n      }\n\n    case LOAD_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/mydevenv/react-nodebird/ch1/front/reducers/user.js"],"names":["dummyUser","nickname","Post","Followers","Followings","signUpData","id","initialState","isLoggedIn","isLoggingIn","isLoggingOut","logInErrorReason","isSignedUp","isSigningUp","signUpErrorReason","me","followingList","followerList","userInfo","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_FOLLOW_REQUEST","LOAD_FOLLOW_SUCCESS","LOAD_FOLLOW_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","ADD_POST_TO_ME","loginRequestAction","data","type","logoutRequestAction","loginSeccessAction","singUpRequestAction","reducer","state","action","isLoading","error","signUpErroReason"],"mappings":"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","sourcesContent":["const dummyUser = {\r\n    nickname: '보르바',\r\n    Post: [],\r\n    Followers: [],\r\n    Followings: [],\r\n    signUpData: {},\r\n    id: 1,\r\n};\r\n\r\nexport const initialState = {\r\n    isLoggedIn: false, // 로그인 여부\r\n    isLoggingIn: false, // 로그인 시도중\r\n    isLoggingOut: false, // 로그아웃 시도중\r\n    logInErrorReason: '', // 로그인 실패사유\r\n    isSignedUp: false, // 회원가입 성공\r\n    isSigningUp: false, // 회원가입 시도중\r\n    signUpErrorReason: '', // 회원가입 실패 사유\r\n    me: null, // 내정보\r\n    followingList: [], // 팔로잉 리스트\r\n    followerList: [], // 팔로워 리스트\r\n    userInfo: null, // 남의 정보\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\r\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\r\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\r\n\r\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\r\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\r\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\r\n\r\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\r\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\r\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\n\r\nexport const loginRequestAction = (data) => ({\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const logoutRequestAction = {\r\n    type: LOG_OUT_REQUEST,\r\n};\r\n\r\nexport const loginSeccessAction = {};\r\n\r\nexport const singUpRequestAction = (data) => ({\r\n    type: SIGN_UP_REQUEST,\r\n    data,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOG_IN_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggingIn: true,\r\n                logInErrorReason: '',\r\n            };\r\n        }\r\n        case LOG_IN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isLoggedIn : true,\r\n                me: dummyUser,\r\n                isLoading: false,\r\n            };\r\n        }\r\n        case LOG_IN_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isLoggedIn: false,\r\n                logInErrorReason: action.error,\r\n                me: null,\r\n            };\r\n        }\r\n        case LOG_OUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggingOut: true,\r\n            };\r\n        }\r\n        case LOG_OUT_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isLoggingOut: false,\r\n                me: null,\r\n            };\r\n        }\r\n        case SIGN_UP_REQUEST: {\r\n            return {\r\n                ...state,\r\n                signUpData: action.data,\r\n                isSigningUp: true,\r\n                isSignedUp: false,\r\n                signUpErroReason: '',\r\n            };\r\n        }\r\n        case SIGN_UP_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                signUpData: action.data,\r\n                isSigningUp: false,\r\n                isSignedUp: true,\r\n            };\r\n        }\r\n        case SIGN_UP_FAILURE: {\r\n            return {\r\n                ...state,\r\n                signUpData: action.data,\r\n                isSigningUp: false,\r\n                signUpErroReason: action.error,\r\n            };\r\n        }\r\n        case LOAD_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LOAD_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                me: action.data\r\n            };\r\n        }\r\n        case LOAD_USER_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}